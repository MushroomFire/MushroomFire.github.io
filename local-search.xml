<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>life_game</title>
    <link href="/2021/01/12/life-game/"/>
    <url>/2021/01/12/life-game/</url>
    
    <content type="html"><![CDATA[<h1 id="生命模拟游戏入门"><a href="#生命模拟游戏入门" class="headerlink" title="生命模拟游戏入门"></a>生命模拟游戏入门</h1><ol><li><p>前言<br>之前看<a href="https://space.bilibili.com/223146252/">妈咪叔</a>讲过元胞自动机和生命游戏，感觉这玩意儿很有意思，今天参考一下<a href="https://zhuanlan.zhihu.com/p/135324994">@路飞的哥哥</a>的代码，自己也来实现一遍，生命模拟游戏的简单入门。</p></li><li><p>生命游戏规则</p><blockquote><p>摘自维基百科<br> <img src="./life_game/life-game-rules.png"></p></blockquote></li><li><p>python 代码实现过程</p><blockquote><p>导入基本的库</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> matplotlib.animation <span class="hljs-keyword">import</span> FuncAnimation, ImageMagickWriter<br></code></pre></td></tr></table></figure><blockquote><p>写一个生成矩阵的迭代器</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Lifegame</span>:</span><br><br>    move = [(i, j) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> [-<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>] <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> [-<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>]]<br>    <br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, ini_matrix</span>):</span><br>        <br>        self.matrix = ini_matrix.copy()<br>        self.shape = ini_matrix.shape<br>        <br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__iter__</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-keyword">return</span> self<br><br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__next__</span>(<span class="hljs-params">self</span>):</span><br>        <br>        x = self.matrix<br>        y = self.matrix.copy()<br><br>        m, n = self.shape<br><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(m):<br>            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>                neigh_num = self.check(i, j)<br>                center = self.matrix[i, j]<br>                <span class="hljs-keyword">if</span> center == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> neigh_num == <span class="hljs-number">3</span>:<br>                    y[i, j] = <span class="hljs-number">1</span><br>                <span class="hljs-keyword">if</span> center == <span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (neigh_num &lt; <span class="hljs-number">2</span> <span class="hljs-keyword">or</span> neigh_num &gt; <span class="hljs-number">3</span>):<br>                    y[i, j] = <span class="hljs-number">0</span><br><br>        self.matrix = y<br><br>        <span class="hljs-keyword">return</span> x<br>    <br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">check</span>(<span class="hljs-params">self, i, j</span>):</span><br>        m, n = self.shape<br>        neigh_num = <span class="hljs-built_in">sum</span>([self.matrix[(i+k)%m, (j+l)%n] <span class="hljs-keyword">for</span> (k, l) <span class="hljs-keyword">in</span> Lifegame.move])<br>        neigh_num -= self.matrix[i, j]<br><br>        <span class="hljs-keyword">return</span> neigh_num<br></code></pre></td></tr></table></figure><p>可以随机设置一些初始条件，让其自由演化</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python">a = np.zeros((<span class="hljs-number">11</span>, <span class="hljs-number">11</span>), dtype = <span class="hljs-string">&#x27;int8&#x27;</span>)<br>a[<span class="hljs-number">1</span>, <span class="hljs-number">5</span>] = <span class="hljs-number">1</span><br>a[<span class="hljs-number">2</span>, <span class="hljs-number">5</span>] = <span class="hljs-number">1</span><br>a[<span class="hljs-number">3</span>, <span class="hljs-number">5</span>] = <span class="hljs-number">1</span><br>a[<span class="hljs-number">7</span>, <span class="hljs-number">5</span>] = <span class="hljs-number">1</span><br>a[<span class="hljs-number">8</span>, <span class="hljs-number">5</span>] = <span class="hljs-number">1</span><br>a[<span class="hljs-number">9</span>, <span class="hljs-number">5</span>] = <span class="hljs-number">1</span><br><br>a[<span class="hljs-number">5</span>, <span class="hljs-number">1</span>] = <span class="hljs-number">1</span><br>a[<span class="hljs-number">5</span>, <span class="hljs-number">2</span>] = <span class="hljs-number">1</span><br>a[<span class="hljs-number">5</span>, <span class="hljs-number">3</span>] = <span class="hljs-number">1</span><br>a[<span class="hljs-number">5</span>, <span class="hljs-number">7</span>] = <span class="hljs-number">1</span><br>a[<span class="hljs-number">5</span>, <span class="hljs-number">8</span>] = <span class="hljs-number">1</span><br>a[<span class="hljs-number">5</span>, <span class="hljs-number">9</span>] = <span class="hljs-number">1</span><br><br>b = np.zeros((<span class="hljs-number">20</span>,<span class="hljs-number">20</span>),dtype=<span class="hljs-string">&#x27;int8&#x27;</span>)<br>b[<span class="hljs-number">3</span>,<span class="hljs-number">4</span>] = <span class="hljs-number">1</span><br>b[<span class="hljs-number">4</span>,<span class="hljs-number">5</span>] = <span class="hljs-number">1</span><br>b[<span class="hljs-number">5</span>,<span class="hljs-number">3</span>] = <span class="hljs-number">1</span><br>b[<span class="hljs-number">5</span>,<span class="hljs-number">4</span>] = <span class="hljs-number">1</span><br>b[<span class="hljs-number">5</span>,<span class="hljs-number">5</span>] = <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>将其演化过程绘制为GIF图</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">for</span> i, name <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>([a, b], [<span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>]):<br><br>    test = Lifegame(i)<br><br>    m, n = i.shape<br>    fig, ax = plt.subplots(figsize = (<span class="hljs-number">10</span>*m/n, <span class="hljs-number">10</span>))<br>    ax.set_xlim(-<span class="hljs-number">0.5</span>, m-<span class="hljs-number">0.5</span>)<br>    ax.set_ylim(-<span class="hljs-number">0.5</span>, n-<span class="hljs-number">0.5</span>)<br>    ax.set_xticks(np.arange(-<span class="hljs-number">0.5</span>, m+<span class="hljs-number">0.5</span>, <span class="hljs-number">1</span>))<br>    ax.set_yticks(np.arange(-<span class="hljs-number">0.5</span>, n+<span class="hljs-number">0.5</span>, <span class="hljs-number">1</span>))<br>    ax.invert_yaxis()<br>    ax.grid(<span class="hljs-literal">True</span>)<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">ini</span>():</span><br>        <span class="hljs-keyword">return</span> ax.imshow(<span class="hljs-number">1</span> - <span class="hljs-built_in">next</span>(test), cmap = <span class="hljs-string">&#x27;gray&#x27;</span>)<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">update</span>(<span class="hljs-params">frame</span>):</span><br>        <span class="hljs-keyword">return</span> ax.imshow(<span class="hljs-number">1</span> - <span class="hljs-built_in">next</span>(test), cmap = <span class="hljs-string">&#x27;gray&#x27;</span>)<br><br>    <span class="hljs-keyword">if</span> name == <span class="hljs-string">&quot;a&quot;</span>:<br>        <br>        ani = FuncAnimation(fig, update, frames=np.arange(<span class="hljs-number">20</span>), init_func=ini)<br><br>        writer = ImageMagickWriter(fps = <span class="hljs-number">2</span>)<br><br>        ani.save(<span class="hljs-string">f&#x27;test-<span class="hljs-subst">&#123;name&#125;</span>.gif&#x27;</span>, writer=writer)<br>    <br>    <span class="hljs-keyword">elif</span> name == <span class="hljs-string">&quot;b&quot;</span>:<br>    <br>        ani = FuncAnimation(fig, update, frames=np.arange(<span class="hljs-number">100</span>), init_func=ini)<br><br>        writer = ImageMagickWriter(fps = <span class="hljs-number">5</span>)<br><br>        ani.save(<span class="hljs-string">f&#x27;test-<span class="hljs-subst">&#123;name&#125;</span>.gif&#x27;</span>, writer=writer)<br></code></pre></td></tr></table></figure><p> 特别要<strong>注意</strong>，此处的ImageMagickWriter请下载7.0以后的版本，我一开始老版本总是会有莫名其妙的错误。</p></blockquote></li><li><p>最终效果如下</p><p><img src="./life_game/test-a.gif"></p><p><img src="./life_game/test-b.gif"></p></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>还没想好叫啥</title>
    <link href="/2021/01/11/first/"/>
    <url>/2021/01/11/first/</url>
    
    <content type="html"><![CDATA[<h1 id="第一次写博客，嘻嘻！"><a href="#第一次写博客，嘻嘻！" class="headerlink" title="第一次写博客，嘻嘻！"></a>第一次写博客，嘻嘻！</h1><h2 id="cxy-is-cute-girl"><a href="#cxy-is-cute-girl" class="headerlink" title="cxy is cute girl!"></a>cxy is cute girl!</h2><ol><li><p>我们都喜欢python</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>    print(<span class="hljs-string">f&quot;cxy 血赚 <span class="hljs-subst">&#123;i&#125;</span> 万元！&quot;</span>)<br></code></pre></td></tr></table></figure></li><li><p>cxy这个冬天要天天快乐</p></li><li><p>下个假期回来一起play switch</p></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/01/11/hello-world/"/>
    <url>/2021/01/11/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
